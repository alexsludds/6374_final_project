$date
	Sat Nov 23 17:31:17 2019
$end
$version
	Icarus Verilog
$end
$timescale
	10ps
$end
$scope module processing_element_tb $end
$scope module u_DUT $end
$var wire 1 ! CLK $end
$var wire 8 " a_overwrite [7:0] $end
$var wire 1 # ack $end
$var wire 8 $ b_overwrite [7:0] $end
$var wire 3 % command_to_execute [2:0] $end
$var wire 1 & image_to_shift $end
$var wire 8 ' isd [7:0] $end
$var wire 8 ( isl [7:0] $end
$var wire 8 ) isr [7:0] $end
$var wire 8 * isu [7:0] $end
$var wire 32 + s_out_overwrite [31:0] $end
$var wire 2 , shift_direction [1:0] $end
$var wire 1 - start $end
$var wire 32 . returned_from_pe [31:0] $end
$var wire 1 / pe_ready $end
$var reg 8 0 A [7:0] $end
$var reg 8 1 B [7:0] $end
$var reg 8 2 osd [7:0] $end
$var reg 8 3 osl [7:0] $end
$var reg 8 4 osr [7:0] $end
$var reg 8 5 osu [7:0] $end
$var reg 1 6 pe_ack $end
$var reg 1 7 ready $end
$var reg 32 8 s_out [31:0] $end
$var reg 1 9 start_multiply $end
$scope module pe_inst $end
$var wire 1 ! CLK $end
$var wire 8 : a_in [7:0] $end
$var wire 8 ; b_in [7:0] $end
$var wire 1 6 pe_ack $end
$var wire 32 < s_in [31:0] $end
$var wire 1 9 start_multiply $end
$var reg 1 / pe_ready $end
$var reg 32 = s_out [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx =
b0 <
b0 ;
b0 :
x9
b0 8
07
x6
b0 5
b0 4
b0 3
b0 2
b0 1
b0 0
0/
bx .
z-
b0 ,
b0 +
b0 *
b0 )
b0 (
b0 '
x&
b0 %
b0 $
x#
b0 "
0!
$end
#5000000000000
b1 %
0&
b1101001 *
0#
1!
#10000000000000
0!
#15000000000000
17
b1101001 0
b1101001 :
1!
#20000000000000
0!
#25000000000000
b10 %
b111 '
07
0#
1!
#30000000000000
0!
#35000000000000
17
b111 0
b111 :
b1101001 2
1!
#40000000000000
0!
#45000000000000
b11 %
1&
b10000110 (
07
0#
1!
#50000000000000
0!
#55000000000000
17
b10000110 1
b10000110 ;
1!
#60000000000000
0!
#65000000000000
b100 %
b10100110 )
07
0#
1!
#70000000000000
0!
#75000000000000
17
b10100110 1
b10100110 ;
b10000110 4
1!
#80000000000000
0!
#85000000000000
b0 %
07
0#
1!
#90000000000000
0!
#95000000000000
19
06
1!
#100000000000000
0!
#105000000000000
17
09
b10010001010 8
b10010001010 <
1/
b10010001010 .
b10010001010 =
1!
#110000000000000
0!
#115000000000000
b101 %
b1110001 $
b111101 "
07
0#
1!
#120000000000000
0!
#125000000000000
17
b1110001 1
b1110001 ;
b111101 0
b111101 :
1!
#130000000000000
0!
#135000000000000
b110 %
b1011101111101100100100101000100 +
07
0#
1!
#140000000000000
0!
#145000000000000
17
b1011101111101100100100101000100 8
b1011101111101100100100101000100 <
1!
#150000000000000
0!
#155000000000000
b111 %
07
0#
1!
#160000000000000
0!
#165000000000000
17
b0 8
b0 <
b0 1
b0 ;
b0 0
b0 :
1!
#170000000000000
0!
#175000000000000
1!
#180000000000000
0!
#185000000000000
1!
#190000000000000
0!
#195000000000000
1!
#195100000000000
